@import "settings";
@import "compass/css3";
@import "compass/utilities";

// List styles
// -------------------------------------------------------

// Mixins for list style types
@mixin unordered {
	 list-style-position: outside;
	 list-style-type: disc;
}

@mixin unordered-inside {
	 list-style-position: inside;
	 list-style-type: disc;
}

@mixin ordered {
	list-style-position: outside;
	list-style-type: decimal;
}

@mixin ordered-inside {
	list-style-position: inside;
	list-style-type: decimal;
}

@mixin nobullet {
	list-style-type: none;
}

@mixin flatlist {
	list-style-type: none;
	margin:0;
	padding:0;
	li { margin:0;padding:0; }
}



// Advanced typography settings
// -------------------------------------------------------

// Get advanced with type if needed for ligatures etc...
@mixin advancedtype {
	//font-variant-ligatures: contextual;  				// Set the default for ligatures
	//-moz-font-feature-settings: "liga=1,dlig=1";    	// Ligature settings for mozilla
	font-kerning: normal; 								// Set the default for kerning
	-webkit-font-smoothing: antialiased; 				// Improve (or in some cases royally screw with) safari's legibility somewhat
	// font-synthesis: none; 							// Don't allow the font to create sythetic bold/italic
	// text-rendering: optimizeLegibility; 				// Improve kerning pairs. Webkit gets funny with this sometimes
}


// Retina images.
// Use with care - http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
// -------------------------------------------------------

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
				 (-o-min-device-pixel-ratio: 2.6/2),
				 (-webkit-min-device-pixel-ratio: 1.3),
				 (min-device-pixel-ratio: 1.3),
				 (min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

@mixin background-image-retina($file, $type, $width, $height, $suffix: '@2x.') {
	background-image: url($file + '.' + $type);
	@media only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (-moz-min-device-pixel-ratio: 2),
		only screen and (-o-min-device-pixel-ratio: 2/1),
		only screen and (min-device-pixel-ratio: 2),
		only screen and (min-resolution: 192dpi),
		only screen and (min-resolution: 2dppx){
		& {
			background-image: url($file + $suffix + $type);
			-webkit-background-size: $width $height;
			-moz-background-size: $width $height;
			-o-background-size: $width $height;
			background-size: $width $height;
		}
	}
}

// vert center
// -------------------------------------------------------
@mixin center-vert() {
	@include center(y);
	&.push-right {
		right: 0;
	}
}
@mixin center($axis: "both"){
	position:absolute;
	@if $axis == "y"{
		top:50%;
		@include transform( translate3d(0, -50%, 0) );
		// -webkit-transform: translateY(-50%);
		// -moz-transform: translateY(-50%);
		// -ms-transform: translateY(-50%);
		// -o-transform: translateY(-50%);
		// transform: translateY(-50%);
	}
	@if $axis == "ybias"{
		top:50%;
		@include transform( translate3d(0, -100%, 0) );
		// -webkit-transform: translateY(-100%);
		// -moz-transform: translateY(-100%);
		// -ms-transform: translateY(-100%);
		// -o-transform: translateY(-100%);
		// transform: translateY(-100%);
	}
	@if $axis == "x"{
		left:50%;
		@include transform( translate3d(-50%, 0, 0) );
		// -webkit-transform: translateX(-50%);
		// -moz-transform: translateX(-50%);
		// -ms-transform: translateX(-50%);
		// -o-transform: translateX(-50%);
		// transform: translateX(-50%);
	}
	@if $axis == "both"{
		top:50%;
		left:50%;
		@include transform( translate3d(-50%, -50%, 0) );
		// -webkit-transform: translate(-50%, -50%);
		// -moz-transform: translate(-50%, -50%);
		// -ms-transform: translate(-50%, -50%);
		// -o-transform: translate(-50%, -50%);
		// transform: translate(-50%, -50%);
	}
}


// Contact CTA
// -------
@mixin footer-padding-height($prop) {
	@if ($prop) {
		#{$prop}: rhythm(1);
		.with-contact-cta & {
			#{$prop} : strip-units($height-global-footer) + strip-units(rhythm(1)) + 0em;
		}
	}
	@else {
		@include bp( $bp-just-stack-it... ) {
			#{$prop}: rhythm(1);
			.with-contact-cta & {
				#{$prop} : strip-units($height-global-footer) + strip-units(rhythm(1)) + 0em;
			}
		}
	}
}


// css3 transitions
// -------------------------------------------------------
@mixin with-transform() {
	.csstransforms3d & { @content; }
	// .csstransforms3d & { @content; }
}
@mixin no-transform() {
	.no-csstransforms3d & { @content; }
}

@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}

// Convert em to px
@function emtopx($target, $context: $base-font-size ){
		@return (strip-units($target) * strip-units($context) )+0px;
}


// keyframes mixin
// -------------------------------------------------------
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}


// Media query mixin
// -------------------------------------------------------
@mixin bp( $query, $layout: $total-columns, $no-query: false ) {
	@if ($MQs) {
		@include susy-breakpoint( $query, $layout, $no-query ) {
			@content;
		}
	} @else {
		@content;
	}
}


// placeholder
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}


@mixin imgmanipulations() {
	&.offset-up-small {
		position: relative;
		top: -2em;
	}
	&.shift-up-small {
		margin-top: -2em;
	}
	&.scale-up {
		@include transform(scale(1.25));
		// transform-origin: 100% 50%;

	}
}
